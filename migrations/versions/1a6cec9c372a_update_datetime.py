"""update_datetime

Revision ID: 1a6cec9c372a
Revises: 67a845562dff
Create Date: 2024-04-09 09:10:57.505998

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1a6cec9c372a'
down_revision: Union[str, None] = '67a845562dff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('exams', 'exam_time_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_constraint('exams_test_id_fkey', 'exams', type_='foreignkey')
    op.create_foreign_key(None, 'exams', 'tests', ['test_id'], ['id'])
    op.alter_column('tests', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('tests', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('tests', 'end_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('tests', 'start_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_constraint(None, 'exams', type_='foreignkey')
    op.create_foreign_key('exams_test_id_fkey', 'exams', 'tests', ['test_id'], ['id'], ondelete='SET NULL')
    op.alter_column('exams', 'exam_time_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    # ### end Alembic commands ###
